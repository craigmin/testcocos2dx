/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "IwDebug.h"
#include "LihuiSocial_autodefs.h"
#include "s3eEdk.h"
#include "LihuiSocial.h"
//Declarations of Init and Term functions
extern s3eResult LihuiSocialInit();
extern void LihuiSocialTerminate();


// On platforms that use a seperate UI/OS thread we can autowrap functions
// here.   Note that we can't use the S3E_USE_OS_THREAD define since this
// code is oftern build standalone, outside the main loader build.
#if defined I3D_OS_IPHONE || defined I3D_OS_OSX || defined I3D_OS_LINUX || defined I3D_OS_WINDOWS

static void connectToWX_wrap()
{
    IwTrace(LIHUISOCIAL_VERBOSE, ("calling LihuiSocial func on main thread: connectToWX"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)connectToWX, 0);
}

static void sendMessageOnWX_wrap()
{
    IwTrace(LIHUISOCIAL_VERBOSE, ("calling LihuiSocial func on main thread: sendMessageOnWX"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)sendMessageOnWX, 0);
}

static int isWXLoggedIn_wrap()
{
    IwTrace(LIHUISOCIAL_VERBOSE, ("calling LihuiSocial func on main thread: isWXLoggedIn"));
    return (int)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)isWXLoggedIn, 0);
}

#define connectToWX connectToWX_wrap
#define sendMessageOnWX sendMessageOnWX_wrap
#define isWXLoggedIn isWXLoggedIn_wrap

#endif

s3eResult LihuiSocialRegister(LihuiSocialCallback cbid, s3eCallback fn, void* pData)
{
    return s3eEdkCallbacksRegister(S3E_EXT_LIHUISOCIAL_HASH, LIHUISOCIAL_CALLBACK_MAX, cbid, fn, pData, 0);
};

s3eResult LihuiSocialUnRegister(LihuiSocialCallback cbid, s3eCallback fn)
{
    return s3eEdkCallbacksUnRegister(S3E_EXT_LIHUISOCIAL_HASH, LIHUISOCIAL_CALLBACK_MAX, cbid, fn);
}

void LihuiSocialRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[5];
    funcPtrs[0] = (void*)LihuiSocialRegister;
    funcPtrs[1] = (void*)LihuiSocialUnRegister;
    funcPtrs[2] = (void*)connectToWX;
    funcPtrs[3] = (void*)sendMessageOnWX;
    funcPtrs[4] = (void*)isWXLoggedIn;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[5] = { 0 };

    /*
     * Register the extension
     */
    s3eEdkRegister("LihuiSocial", funcPtrs, sizeof(funcPtrs), flags, LihuiSocialInit, LihuiSocialTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int LihuiSocialStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&LihuiSocialRegisterExt;
    return 0;
}

int g_LihuiSocialVal = LihuiSocialStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    LihuiSocialRegisterExt();
}
#endif

#endif
