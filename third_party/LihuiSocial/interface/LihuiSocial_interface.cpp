/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "LihuiSocial.h"


// For MIPs (and WP8) platform we do not have asm code for stack switching 
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*LihuiSocialRegister_t)(LihuiSocialCallback cbid, s3eCallback fn, void* userData);
typedef  s3eResult(*LihuiSocialUnRegister_t)(LihuiSocialCallback cbid, s3eCallback fn);
typedef       void(*connectToWX_t)();
typedef       void(*sendMessageOnWX_t)();
typedef        int(*isWXLoggedIn_t)();

/**
 * struct that gets filled in by LihuiSocialRegister
 */
typedef struct LihuiSocialFuncs
{
    LihuiSocialRegister_t m_LihuiSocialRegister;
    LihuiSocialUnRegister_t m_LihuiSocialUnRegister;
    connectToWX_t m_connectToWX;
    sendMessageOnWX_t m_sendMessageOnWX;
    isWXLoggedIn_t m_isWXLoggedIn;
} LihuiSocialFuncs;

static LihuiSocialFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xca74d99b, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: LihuiSocial");
            
        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xca74d99b, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool LihuiSocialAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult LihuiSocialRegister(LihuiSocialCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(LIHUISOCIAL_VERBOSE, ("calling LihuiSocial[0] func: LihuiSocialRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_LihuiSocialRegister(cbid, fn, userData);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult LihuiSocialUnRegister(LihuiSocialCallback cbid, s3eCallback fn)
{
    IwTrace(LIHUISOCIAL_VERBOSE, ("calling LihuiSocial[1] func: LihuiSocialUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_LihuiSocialUnRegister(cbid, fn);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void connectToWX()
{
    IwTrace(LIHUISOCIAL_VERBOSE, ("calling LihuiSocial[2] func: connectToWX"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_connectToWX();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void sendMessageOnWX()
{
    IwTrace(LIHUISOCIAL_VERBOSE, ("calling LihuiSocial[3] func: sendMessageOnWX"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_sendMessageOnWX();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

int isWXLoggedIn()
{
    IwTrace(LIHUISOCIAL_VERBOSE, ("calling LihuiSocial[4] func: isWXLoggedIn"));

    if (!_extLoad())
        return 0;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    int ret = g_Ext.m_isWXLoggedIn();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}
