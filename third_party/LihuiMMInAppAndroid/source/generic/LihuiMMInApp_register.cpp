/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "IwDebug.h"
#include "LihuiMMInApp_autodefs.h"
#include "s3eEdk.h"
#include "LihuiMMInApp.h"
//Declarations of Init and Term functions
extern s3eResult LihuiMMInAppInit();
extern void LihuiMMInAppTerminate();


// On platforms that use a seperate UI/OS thread we can autowrap functions
// here.   Note that we can't use the S3E_USE_OS_THREAD define since this
// code is oftern build standalone, outside the main loader build.
#if defined I3D_OS_IPHONE || defined I3D_OS_OSX || defined I3D_OS_LINUX || defined I3D_OS_WINDOWS

static void LihuiInAppStart_wrap()
{
    IwTrace(LIHUIMMINAPP_VERBOSE, ("calling LihuiMMInApp func on main thread: LihuiInAppStart"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)LihuiInAppStart, 0);
}

static void LihuiInAppRestorePurchases_wrap()
{
    IwTrace(LIHUIMMINAPP_VERBOSE, ("calling LihuiMMInApp func on main thread: LihuiInAppRestorePurchases"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)LihuiInAppRestorePurchases, 0);
}

static void LihuiInAppBuyItem_wrap(const char* itemId)
{
    IwTrace(LIHUIMMINAPP_VERBOSE, ("calling LihuiMMInApp func on main thread: LihuiInAppBuyItem"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)LihuiInAppBuyItem, 1, itemId);
}

#define LihuiInAppStart LihuiInAppStart_wrap
#define LihuiInAppRestorePurchases LihuiInAppRestorePurchases_wrap
#define LihuiInAppBuyItem LihuiInAppBuyItem_wrap

#endif

s3eResult LihuiMMInAppRegister(LihuiMMInAppCallback cbid, s3eCallback fn, void* pData)
{
    return s3eEdkCallbacksRegister(S3E_EXT_LIHUIMMINAPP_HASH, LIHUIMMINAPP_CALLBACK_MAX, cbid, fn, pData, 0);
};

s3eResult LihuiMMInAppUnRegister(LihuiMMInAppCallback cbid, s3eCallback fn)
{
    return s3eEdkCallbacksUnRegister(S3E_EXT_LIHUIMMINAPP_HASH, LIHUIMMINAPP_CALLBACK_MAX, cbid, fn);
}

void LihuiMMInAppRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[5];
    funcPtrs[0] = (void*)LihuiMMInAppRegister;
    funcPtrs[1] = (void*)LihuiMMInAppUnRegister;
    funcPtrs[2] = (void*)LihuiInAppStart;
    funcPtrs[3] = (void*)LihuiInAppRestorePurchases;
    funcPtrs[4] = (void*)LihuiInAppBuyItem;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[5] = { 0 };

    /*
     * Register the extension
     */
    s3eEdkRegister("LihuiMMInApp", funcPtrs, sizeof(funcPtrs), flags, LihuiMMInAppInit, LihuiMMInAppTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int LihuiMMInAppStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&LihuiMMInAppRegisterExt;
    return 0;
}

int g_LihuiMMInAppVal = LihuiMMInAppStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    LihuiMMInAppRegisterExt();
}
#endif

#endif
