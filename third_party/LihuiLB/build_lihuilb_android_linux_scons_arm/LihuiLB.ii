# 1 "D:\\10kgratExtension\\ExMarmalade\\LihuiLB\\LihuiLB\\source\\generic\\LihuiLB.cpp"
# 1 "d:\\10kgratExtension\\ExMarmalade\\LihuiLB\\LihuiLB\\build_lihuilb_android_linux_scons_arm//"
# 1 "<command-line>"
# 1 "./temp_defines_debug.h" 1
# 1 "<command-line>" 2
# 1 "D:\\10kgratExtension\\ExMarmalade\\LihuiLB\\LihuiLB\\source\\generic\\LihuiLB.cpp"
# 13 "D:\\10kgratExtension\\ExMarmalade\\LihuiLB\\LihuiLB\\source\\generic\\LihuiLB.cpp"
# 1 "../source/h/LihuiLB_internal.h" 1
# 18 "../source/h/LihuiLB_internal.h"
# 1 "e:/marmalade/7.0/s3e/h/s3eTypes.h" 1
# 35 "e:/marmalade/7.0/s3e/h/s3eTypes.h"
typedef unsigned char s3e_uint8_t;
typedef signed char s3e_int8_t;
typedef unsigned short int s3e_uint16_t;
typedef signed short int s3e_int16_t;
typedef unsigned int s3e_uint32_t;
typedef signed int s3e_int32_t;
# 49 "e:/marmalade/7.0/s3e/h/s3eTypes.h"
  typedef signed long long s3e_int64_t;
  typedef unsigned long long s3e_uint64_t;
# 62 "e:/marmalade/7.0/s3e/h/s3eTypes.h"
typedef s3e_uint64_t uint64_t;
typedef s3e_int64_t int64_t;
typedef s3e_uint32_t uint32_t;
typedef s3e_int32_t int32_t;
typedef s3e_uint16_t uint16_t;
typedef s3e_int16_t int16_t;
typedef s3e_uint8_t uint8_t;
typedef s3e_int8_t int8_t;
# 84 "e:/marmalade/7.0/s3e/h/s3eTypes.h"
    typedef int intptr_t;
    typedef unsigned int uintptr_t;
# 96 "e:/marmalade/7.0/s3e/h/s3eTypes.h"
typedef unsigned int uint;
typedef unsigned short int ushort;
typedef unsigned long int ulong;
typedef unsigned char uint8;
typedef signed char int8;


typedef int64_t int64;
typedef uint64_t uint64;




typedef unsigned int uint32;






typedef signed int int32;






typedef uint16_t uint16;




typedef int16_t int16;
# 207 "e:/marmalade/7.0/s3e/h/s3eTypes.h"
typedef enum s3eResult
{
    S3E_RESULT_SUCCESS = 0,
    S3E_RESULT_ERROR = 1
} s3eResult;




typedef uint8 s3eBool;
# 227 "e:/marmalade/7.0/s3e/h/s3eTypes.h"
typedef unsigned short s3eWChar;
# 237 "e:/marmalade/7.0/s3e/h/s3eTypes.h"
typedef int32 (*s3eCallback) (void* systemData, void* userData);
# 19 "../source/h/LihuiLB_internal.h" 2
# 1 "../h/LihuiLB.h" 1
# 21 "../h/LihuiLB.h"
enum LihuiLBCallback
{
    LIHUILB_CALLBACK_REICEIVE_SUCCESSFUL,
    LIHUILB_CALLBACK_REICEIVE_FAILED,
    LIHUILB_CALLBACK_UPDATE_SUCCESSFUL,
    LIHUILB_CALLBACK_UPDATE_FAILED,
    LIHUILB_CALLBACK_MAX
};

extern "C" {





s3eBool LihuiLBAvailable();
# 53 "../h/LihuiLB.h"
s3eResult LihuiLBRegister(LihuiLBCallback cbid, s3eCallback fn, void* userData);
# 67 "../h/LihuiLB.h"
s3eResult LihuiLBUnRegister(LihuiLBCallback cbid, s3eCallback fn);

void initLB();

void updateScore(int score);

void receiveRank();

int getScore(int rank);

int getUserRank();

int getNextWeekLeftSeconds();

bool notUnlimetedLives();

void setBeijingTime();

bool notShared();

void setShareTime();

}
# 20 "../source/h/LihuiLB_internal.h" 2
# 1 "../source/h/LihuiLB_autodefs.h" 1
# 21 "../source/h/LihuiLB_internal.h" 2







s3eResult LihuiLBInit();




s3eResult LihuiLBInit_platform();





void LihuiLBTerminate();




void LihuiLBTerminate_platform();
void initLB_platform();

void updateScore_platform(int score);

void receiveRank_platform();

int getScore_platform(int rank);

int getUserRank_platform();

int getNextWeekLeftSeconds_platform();

bool notUnlimetedLives_platform();

void setBeijingTime_platform();

bool notShared_platform();

void setShareTime_platform();
# 14 "D:\\10kgratExtension\\ExMarmalade\\LihuiLB\\LihuiLB\\source\\generic\\LihuiLB.cpp" 2
s3eResult LihuiLBInit()
{

    return LihuiLBInit_platform();
}

void LihuiLBTerminate()
{

    LihuiLBTerminate_platform();
}

void initLB()
{
 initLB_platform();
}

void updateScore(int score)
{
 updateScore_platform(score);
}

void receiveRank()
{
 receiveRank_platform();
}

int getScore(int rank)
{
 return getScore_platform(rank);
}

int getUserRank()
{
 return getUserRank_platform();
}

int getNextWeekLeftSeconds()
{
 return getNextWeekLeftSeconds_platform();
}

bool notUnlimetedLives()
{
 return notUnlimetedLives_platform();
}

void setBeijingTime()
{
 setBeijingTime_platform();
}

bool notShared()
{
 return notShared_platform();
}

void setShareTime()
{
 setShareTime_platform();
}
